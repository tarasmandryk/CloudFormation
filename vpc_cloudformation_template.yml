AWSTemplateFormatVersion: '2010-09-09'
Description:
  This template deploys a VPC, with a pair of public, and 4 private subnets spread
  across two Availability Zones. It deploys an Internet Gateway, with a default
  route on the public subnets. It deploys a VPN Gateway and default route for it in
  the private subnets It deploys a pair of NAT Gateways (one in each AZ),
  and default routes for them in the provate subnets for applications.

Parameters:
  EnvironmentName:
    Description: An environment name that will be prefixed to resource names
    Type: String

  VpcCIDR:
    Description: Please enter the IP range (CIDR notation) for this VPC
    Type: String
    MinLength: '11'
    MaxLength: '18'
    Default: 10.0.0.0/20
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: Must be a valid CIDR range of the form x.x.x.x/x.

  PublicSubnet1CIDR:
    Description: Please enter the IP range (CIDR notation) for the public subnet in the first Availability Zone
    Type: String
    Default: 10.0.7.0/24

  PublicSubnet2CIDR:
    Description: Please enter the IP range (CIDR notation) for the public subnet in the second Availability Zone
    Type: String
    Default: 10.0.8.0/24

  PrivateSubnet1CIDR:
    Description: Please enter the IP range (CIDR notation) for the private subnet (DB subnet 1) in the first Availability Zone
    Type: String
    Default: 10.0.1.0/24

  PrivateSubnet2CIDR:
    Description: Please enter the IP range (CIDR notation) for the private subnet (DB subnet 2) in the second Availability Zone
    Type: String
    Default: 10.0.2.0/24

  PrivateSubnet3CIDR:
    Description: Please enter the IP range (CIDR notation) for the private subnet (Solr subnet 1) in the first Availability Zone
    Type: String
    Default: 10.0.3.0/24

  PrivateSubnet4CIDR:
    Description: Please enter the IP range (CIDR notation) for the private subnet (Solr subnet 2) in the second Availability Zone
    Type: String
    Default: 10.0.4.0/24

  PrivateSubnet5CIDR:
    Description: Please enter the IP range (CIDR notation) for the private subnet (App subnet 1) in the first Availability Zone
    Type: String
    Default: 10.0.5.0/24

  PrivateSubnet6CIDR:
    Description: Please enter the IP range (CIDR notation) for the private subnet (App subnet 2) in the second Availability Zone
    Type: String
    Default: 10.0.6.0/24

  LicenseServerIP:
    Description: Please enter IP Address of the License Server
    Type: String
    Default: 8.8.8.8/32
    MinLength: '10'
    MaxLength: '18'
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: Must be a valid IP address format x.x.x.x/32

  DNSZoneName:
    Description: An internal DNS zone name
    Type: String
    Default: aiacloud.local

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDR
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} VPC

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Internet GW
        - Key: Network
          Value: Public

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC

  VPNGateway1:
    Type: AWS::EC2::VPNGateway
    Properties:
      Type: ipsec.1
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} VPN

  VPNGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      VpnGatewayId: !Ref VPNGateway1

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      CidrBlock: !Ref PublicSubnet1CIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Public Subnet (AZ1)

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 1, !GetAZs '' ]
      CidrBlock: !Ref PublicSubnet2CIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Public Subnet (AZ2)

  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      CidrBlock: !Ref PrivateSubnet1CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Private Subnet for DB (AZ1)

  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 1, !GetAZs '' ]
      CidrBlock: !Ref PrivateSubnet2CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Private Subnet for DB (AZ2)

  PrivateSubnet3:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      CidrBlock: !Ref PrivateSubnet3CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Private Subnet for Solr (AZ1)

  PrivateSubnet4:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 1, !GetAZs '' ]
      CidrBlock: !Ref PrivateSubnet4CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Private Subnet for Solr (AZ2)

  PrivateSubnet5:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      CidrBlock: !Ref PrivateSubnet5CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Private Subnet for connectors (AZ1)

  PrivateSubnet6:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 1, !GetAZs '' ]
      CidrBlock: !Ref PrivateSubnet6CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Private Subnet for connectors (AZ2)

  NatGateway1EIP:
    Type: AWS::EC2::EIP
    DependsOn: InternetGatewayAttachment
    Properties:
      Domain: vpc

  NatGateway2EIP:
    Type: AWS::EC2::EIP
    DependsOn: InternetGatewayAttachment
    Properties:
      Domain: vpc

  NatGateway1:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGateway1EIP.AllocationId
      SubnetId: !Ref PublicSubnet1
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} NAT GW 1 (AZ1)

  NatGateway2:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGateway2EIP.AllocationId
      SubnetId: !Ref PublicSubnet2
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} NAT GW 2 (AZ2)

  MainRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Private Routes

#  DefaultMainRoute:
#    Type: AWS::EC2::Route
#    Properties:
#      RouteTableId: !Ref MainRouteTable
#      DestinationCidrBlock: 0.0.0.0/0
#      NatGatewayId: !Ref VPNGateway1
#
  PrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref MainRouteTable
      SubnetId: !Ref PrivateSubnet1

  PrivateSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref MainRouteTable
      SubnetId: !Ref PrivateSubnet2

  PrivateSubnet3RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref MainRouteTable
      SubnetId: !Ref PrivateSubnet3

  PrivateSubnet4RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref MainRouteTable
      SubnetId: !Ref PrivateSubnet4

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Public Routes

  DefaultPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet1

  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet2


  DMZRouteTable1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} DMZ Routes (AZ1)

  LicenseServerDMZRoute1:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref DMZRouteTable1
      DestinationCidrBlock: !Ref LicenseServerIP
      NatGatewayId: !Ref NatGateway1

#  WorldDMZRoute1:
#    Type: AWS::EC2::Route
#    DependsOn: VPNGatewayAttachment
#    Properties:
#      RouteTableId: !Ref DMZRouteTable1
#      DestinationCidrBlock: 0.0.0.0/0
#      VpnGatewayId: !Ref VPNGateway1

  PrivateSubnet5RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref DMZRouteTable1
      SubnetId: !Ref PrivateSubnet5

  DMZRouteTable2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} DMZ Routes (AZ2)

  LicenseServerDMZRoute2:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref DMZRouteTable2
      DestinationCidrBlock: !Ref LicenseServerIP
      NatGatewayId: !Ref NatGateway2

#  WorldDMZRoute2:
#    Type: AWS::EC2::Route
#    DependsOn: VPNGatewayAttachment
#    Properties:
#      RouteTableId: !Ref DMZRouteTable2
#      DestinationCidrBlock: 0.0.0.0/0
#      InstanceId: !Ref VPNGateway1

  PrivateSubnet6RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref DMZRouteTable2
      SubnetId: !Ref PrivateSubnet6

  VPNGatewayRouteProp:
    Type: AWS::EC2::VPNGatewayRoutePropagation
    DependsOn: VPNGatewayAttachment
    Properties:
      RouteTableIds: [!Ref DMZRouteTable1, !Ref DMZRouteTable2, !Ref MainRouteTable]
      VpnGatewayId: !Ref VPNGateway1

  NoIngressSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: "no-ingress-sg"
      GroupDescription: "Security group with no ingress rule"
      VpcId: !Ref VPC

  JumpHostSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: "jump-host-sg"
      GroupDescription: "SSH traffic in, all traffic out"
      VpcId: !Ref VPC
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '22'
        ToPort: '22'
        CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
      - IpProtocol: -1
        CidrIp: 0.0.0.0/0

  DNS:
    Type: "AWS::Route53::HostedZone"
    Properties:
      HostedZoneConfig:
        Comment: "Private hosted zone for AIA Cloud solution"
      Name: !Ref DNSZoneName
      VPCs:
        -
          VPCId: !Ref VPC
          VPCRegion: !Ref AWS::Region
      HostedZoneTags:
        -
          Key: Name
          Value: !Sub ${EnvironmentName} Private hosted zone

Outputs:
  VPC:
    Description: A reference to the created VPC
    Value: !Ref VPC

  DBSubnets:
    Description: A list of the private DB subnets
    Value: !Join [ ",", [ !Ref PrivateSubnet1, !Ref PrivateSubnet2 ]]

  SolrSubnets:
    Description: A list of the private Solr subnets
    Value: !Join [ ",", [ !Ref PrivateSubnet3, !Ref PrivateSubnet4 ]]

  PublicSubnets:
    Description: A list of the public subnets
    Value: !Join [ ",", [ !Ref PublicSubnet1, !Ref PublicSubnet2 ]]

  PrivateSubnets:
    Description: A list of the private subnets
    Value: !Join [ ",", [ !Ref PrivateSubnet1, !Ref PrivateSubnet2, !Ref PrivateSubnet3, !Ref PrivateSubnet4, !Ref PrivateSubnet5, !Ref PrivateSubnet6 ]]

  PublicSubnet1:
    Description: A reference to the public subnet in the 1st Availability Zone
    Value: !Ref PublicSubnet1

  PublicSubnet2:
    Description: A reference to the public subnet in the 2nd Availability Zone
    Value: !Ref PublicSubnet2

  PrivateSubnet1:
    Description: A reference to the private subnet in the 1st Availability Zone
    Value: !Ref PrivateSubnet1

  PrivateSubnet2:
    Description: A reference to the private subnet in the 2nd Availability Zone
    Value: !Ref PrivateSubnet2

  PrivateSubnet3:
    Description: A reference to the private subnet in the 1st Availability Zone
    Value: !Ref PrivateSubnet3

  PrivateSubnet4:
    Description: A reference to the private subnet in the 2nd Availability Zone
    Value: !Ref PrivateSubnet4

  PrivateSubnet5:
    Description: A reference to the private subnet in the 1st Availability Zone
    Value: !Ref PrivateSubnet5

  PrivateSubnet6:
    Description: A reference to the private subnet in the 2nd Availability Zone
    Value: !Ref PrivateSubnet6

  VPNGateway:
    Description: A reference to the VPNGateway created in the VPC
    Value: !Ref VPNGateway1

  NoIngressSecurityGroup:
    Description: Security group with no ingress rule
    Value: !Ref NoIngressSecurityGroup

  JumpHostSecurityGroup:
    Description: SSH traffic in, all traffic out
    Value: !Ref JumpHostSecurityGroup
